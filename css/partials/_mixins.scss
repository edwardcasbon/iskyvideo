@mixin responsive($width) {
  @if $width == desktop {
    @media only screen and (min-width: $desktop) { @content; }
  }
  @else if $width == netbook {
    @media only screen and (min-width: $netbook) { @content; }
  }
  @else if $width == tablet {
    @media only screen and (min-width: $tablet) { @content; }
  }
  @else if $width == smartphone {
    @media only screen and (min-width: $smartphone) { @content; }
  }
}


@mixin box-sizing($value) {
	-moz-box-sizing: $value;
	-webkit-box-sizing: $value;
	box-sizing: $value;
}

@mixin opacity($value) {
	opacity: $value/100;
	-ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=$value)";
	filter: alpha(opacity=$value);
}

@mixin rotate($value) {
	-moz-transform: rotate($value);
	-webkit-transform: rotate($value);
	-ms-transform: rotate($value);
	-o-transform: rotate($value);
	transform: rotate($value);
}

@mixin scale($value) {
	transform: scale($value);
}

@mixin border-radius($tl, $tr: null, $br: null, $bl: null) {
	@if $tr == null {$tr: $tl;}
	@if $br == null {$br: $tl;}
	@if $bl == null {$bl: $tl;}
	
	-webkit-border-top-left-radius: $tl;
	-webkit-border-top-right-radius: $tr;
	-webkit-border-bottom-right-radius: $br;
	-webkit-border-bottom-left-radius: $bl;
	-moz-border-radius-topleft: $tl;
	-moz-border-radius-topright: $tr;
	-moz-border-radius-bottomright: $br;
	-moz-border-radius-bottomleft: $bl;
	border-top-left-radius: $tl;
	border-top-right-radius: $tr;
	border-bottom-right-radius: $br;
	border-bottom-left-radius: $bl;
}

@mixin rgba($property, $r, $g, $b, $a) {
	#{$property}: rgb($r,$g,$b);
	#{$property}: rgba($r,$g,$b,$a);
}

@mixin font-size($sizeValue) {
	font-size: $sizeValue + px;
	font-size: ($sizeValue/$baseFontSize) + rem;
}

@mixin column-count($count) {
	-moz-column-count: $count;
	-webkit-column-count: $count;
	column-count: $count;
}

@mixin column-gap($size) {
	-moz-column-gap: $size;
	-webkit-column-gap: $size;
	column-gap: $size;
}

@mixin transform($string) {
	-webkit-transform: $string;
	-moz-transform: $string;
	-ms-transform: $string;
	-o-transform: $string;
	transform: $string;
}

@mixin transition($element, $duration: 1s, $timingFunction: ease) {
	-webkit-transition: $element $duration $timingFunction;
	-moz-transition: $element $duration $timingFunction;
	transition: $element $duration $timingFunction;
}

@mixin animation($animation, $duration: 1s, $infinite: infinite, $easing: linear) {
	-webkit-animation: $animation $duration $infinite $easing;
	-moz-animation: $animation $duration $infinite $easing;
	animation: $animation $duration $infinite $easing;
}

@mixin animation-delay($delay) {
	animation-delay: $delay;
}

@mixin keyframes ($name) {
	@-webkit-keyframes $name {
		@content
	}
	@keyframes $name {
		@content
	}
}

@mixin vertical-align {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-moz-transform: translateY(-50%);
	-o-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}

@mixin appearance ($value) {
	-webkit-appearance: $value;
	-moz-appearance: $value;
	appearance: $value;
}